package test

import org.scalatest.Spec
import scala.annotation.tailrec

sealed class FunctionRecursiveTest extends Spec {
  object `recursive functions` {

    // recursive functions must define result type explicitly
    def fact(n: Int): Int = if (n <= 0) 1 else n * fact(n - 1)

    def `simple demo` = {
      assertResult(120)(fact(5))
    }

    def __length[T](lst: List[T]) = {
      @tailrec
      def __length__[T](lst: List[T], length: Int): Int = {
        lst match {
          case Nil => length
          case head :: tail => __length__(tail, length + 1)
        } //match
      }
      __length__(lst, 0)
    } //def

    def `list recursive pattern match` = {
      assertResult(4) { __length(List( 3, 4, 5, 6)) }
    } //def

  } //object
}