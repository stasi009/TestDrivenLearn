

package test

import org.scalatest.Spec

class CaseClassTest extends Spec {

  object `demo usage` {
    case class Fool(number: Int, name: String)

    def `companion object apply` = {
      val f1 = Fool(1, "abc")
      assertResult(1)(f1.number)

      val f2 = Fool(name = "cd", number = 9) // use named arguments
      assertResult("cd")(f2.name)
    }

    def `companion object unapply` = {
      val Fool(number, name) = Fool(1, "xy")
      assert(number == 1)
      assert(name == "xy")
    }

    def `auto value-based equality check` = {
      val f1 = Fool(1, "abc")
      val f2 = Fool(1, "abc")

      assert(!(f1 eq f2))
      assert(f1 == f2)
    }
    
    def `test toString` = {
      val f = Fool(1,"ab")
      assertResult("Fool(1,ab)")(f.toString)
    }

  } //object

}