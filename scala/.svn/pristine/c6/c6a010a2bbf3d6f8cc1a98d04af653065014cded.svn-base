package test

import org.scalatest.Spec

sealed class HighOrderFunctionTest extends Spec {

  sealed abstract class Drawing
  case class Point(x: Int, y: Int) extends Drawing
  case class Circle(p: Point, r: Int) extends Drawing
  case class Cylinder(c: Circle, h: Int) extends Drawing

  object `basic demo` {
    
    def `test andThen` = {
      
      def point((x:Int,y:Int)) = Point(x,y)
      def circle(r:Int)(p:Point) = Circle(p,r)
      def cylinder(h:Int)(c:Circle) = Cylinder(c,h)
      
      
      
      val step1 = point _ 
      step1.
      
      val drawall = andThen (circle(3) _) andThen (cylinder(9) _)
      
    }//def

  } //object

}