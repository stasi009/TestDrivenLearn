package test

import common.Utility
import org.scalatest.Spec

sealed class VectorTest extends Spec {

  object `demo usages` {

    def `type inheritance` = {
      val v = Vector(6, 8, 9)
      assert(v.isInstanceOf[IndexedSeq[Int]])
    }

    def `access by index` = {
      val v = Vector(1, 2, 3)
      assertResult(2)(v(1))
      intercept[IndexOutOfBoundsException] { v(-1) } // negative index is not supported
      intercept[IndexOutOfBoundsException] { v(100) }
    }

    def `linear access` = {

      val s = Vector(1, 2, 3)
      assert(Utility.seqLength(s) == 3)

    } //def

  }

}