package test

import org.scalatest.Spec

sealed class StreamTest extends Spec {

  object `basic operations` {

    def `demo 1` = {
      def numsFrom(start: Int): Stream[Int] = start #:: numsFrom(start + 1)

      val stream = numsFrom(10)

      val firstpart = stream.take(5).force
      assertResult(10 to 14)(firstpart)

    } //def

    sealed class DataSource {
      private var _sideeffect = 0

      def numsFrom(start: Int): Stream[Int] = {
        _sideeffect += 1
        start #:: numsFrom(start + 1)
      } //def  

      def sideEffect = _sideeffect
    }
    
    def `demo cache feature of stream` = {
      val ds = new DataSource
      
      val stream = ds.numsFrom(100)
      
      assertResult(105)(stream(4))
    }

  } //object

}