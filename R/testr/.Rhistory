dim(g)
g
class(g)
length(g)
length(x)
x <- 1:10
x
y <- c(1,2,2,2,1,1,2,2,3,3)
length(y)
split(x,y)
x <- 1:10
y <- c(1,2,3,2,1,1,2,2,1,3)
g <- split(x,y)
g
g$1
g[[1]]
g[[2]]
x <- 1:10
y <- c(1,2,3,2,1,1,2,2,1,3)
g <- split(x,y)
checkIdentical(c(1L,5L,6L,9L), g[[1]])
checkIdentical(c(2L,4L,7L,8L), g[[2]])
checkIdentical(c(3L,10L), g[[3]])
names <- c("a","b","a","c", "c","b","a")
scores <- 1:length(names)
d <- data.frame(
names = names,
scores = scores
)
d
with(d,tapply(scores,names,mean))
g <- with(d,tapply(scores,names,mean))
g
g$a
g[1]
g[1]*3
names <- c("a","b","a","c", "c","b","a")
scores <- 1:length(names)
d <- data.frame(
names = names,
scores = scores
)
actual <- with(d,tapply(scores,names,mean))
expected <- c(a=3.666667,b=4,c=4.5)
checkEquals(expected,actual)
actual <- with(d,tapply(scores,names,mean))
expected <- c(a=3.666667,b=4,c=4.5)
class(actual)
checkEqualsNumeric(expected,actual)
a <- 1e-3
a
names <- c("a","b","a","c", "c","b","a")
scores <- 1:length(names)
d <- data.frame(
names = names,
scores = scores
)
actual <- with(d,tapply(scores,names,mean))
expected <- c(a=3.666667,b=4,c=4.5)
checkEqualsNumeric(expected,actual,tolerance=1e-3)
library(plyr)
installed.packages
installed.packages()
l <- installed.packages()
class(l)
colnames(l)
l[["Package"]]
l[c("Package")]
l
dim(l)
l[,"Package"]
l <- l[,"Package"]
l
class(l)
l == "plyr"
which(l=="plyr")
l[7]
d <- data.frame(x=1:5, y=6:10)
llply(d,sum)
d
source("testall.R",echo=TRUE)
llply(d,sum)
laply(d,sum)
class(laply(d,sum))
# input: list
# output: list
d <- data.frame(x=1:5, y=6:10)
checkIdentical( list(x=15L,y=40L), llply(d,sum) )
checkIdentical( c(x=15L,y=40L), laply(d,sum) )
laply(d,sum)
c(x=15L,y=40L)
x <- laply(d,sum)
class(x)
y <- c(x=15L,y=40L)
class(y)
is.array(x)
laply(d,sum)
laply(d,sum)
c(15,40)
c(a=15,b=40)
# input: list
# output: list
d <- data.frame(x=1:5, y=6:10)
checkIdentical( list(x=15L,y=40L), llply(d,sum) )
checkIdentical( c(15L,40L), laply(d,sum) )
names <- c("a","b","a","c", "c","b","a")
scores <- 1:length(names)
levels <- c(4,5,2,1,3,5,8)
d <- data.frame(
name = names,
score = scores,
level = levels)
d
d <- data.frame(
name = c("a","b","a","c", "c","b","a"),
score = 1:7,
level =  c(4,5,2,1,3,5,8))
d
ddply(d,.(name),colwise(mean))
actual <- ddply(d,.(name),colwise(mean))
expected <- data.frame(
name = c("a","b","c"),
score = c(3.666667,4,4.5),
level = c(4.666667,5,2))
checkEquals(expected,actual)
checkEquals(expected,actual,tolerance=1e-4)
actual <- ddply(d,.(name),
summarize,
mean_score = mean(score),
max_level = max(level))
actual
with(d,split(score,name))
with(d,split(level,name))
d <- data.frame(
name = c("a","b","a","c", "c","b","a"),
score = 1:7,
level =  c(4,5,2,1,3,5,8))
actual <- ddply(d,.(name),
summarize,
mean_score = mean(score),
max_level = max(level))
expected <- data.frame(
name = c("a","b","c"),
mean_score = c(3.666667,4,4.5),
max_level = c(8,5,3))
checkEquals(expected,actual,tolerance=1e-4)
source("testall.R",echo=TRUE)
g <- with(d,split(score,name))
class(g)
g
d <- data.frame(
name = c("a","b","a","c", "c","b","a"),
score = 1:7,
level =  c(4,5,2,1,3,5,8))
g <- with(d,split(score,name))
expected <- list(a=c(1L,3L,7L),b=c(2L,6L),c=c(4L,5L))
checkIdentical(expected,g)
source("testall.R",echo=TRUE)
search()
datasets()
datasets::
?datasets
library(datasets)
ls(datasets)
ls()
library(help = "datasets")
AirPassengers
airquality
View(airquality)
library(datasets)
View(airquality)
.libPaths()
Sys.time()
txt <- "20:17:40 20/07/1969"
dt <- strptime(txt)
dt <- strptime(txt,""%H:%M:%S %d/%m/%Y"")
dt <- strptime(txt,"%H:%M:%S %d/%m/%Y")
dt
txt
class(dt)
dt$sec
source("testall.R",echo=TRUE)
checkIdentical(1969L, dt$year)
checkIdentical(1969, dt$year)
dt$year
?POSIXlt
checkIdentical(69L, dt$year)
source("testall.R",echo=TRUE)
txt <- "20:17:40 20/07/2013"
dt <- strptime(txt,"%H:%M:%S %d/%m/%Y")
checkIdentical(113L, dt$year)# year returns "years since 1900"
checkIdentical(7L, dt$mon)
dt
dt$mon
txt <- "20:17:40 20/07/2013"
dt <- strptime(txt,"%H:%M:%S %d/%m/%Y")
checkIdentical(113L, dt$year)# year returns "years since 1900"
checkIdentical(6L, dt$mon)#0â€“11: months after the first of the year.
checkIdentical(20L, dt$mday)
checkIdentical(20L, dt$hour)
checkIdentical(17L, dt$min)
checkIdentical(40L, dt$sec)
dt$sec
checkIdentical(40, dt$sec)
source("testall.R",echo=TRUE)
data()
library(datasets)
women
View(women)
data()
AirPassengers
head(AirPassengers)
head(women)
?head
head(AirPassengers)
head(AirPassengers,n=6)
head(AirPassengers,n=6L)
head(AirPassengers,n=16L)
class(AirPassengers)
?ts
class(women)
?read.table
filename <- "sample_data.csv"
dt <- read.table(filename,header=TRUE,fill=TRUE)
dt
head(dt)
dim(dt)
read.csv(filename)
dt <- read.csv(filename)
dim(dt)
filename <- "who.csv"
dt <- read.csv(filename,header=TRUE,fill=TRUE)
head(dt)
who <- dt
str(who)
filename <- "who.csv"
who <- read.table(filename,sep=",",header=TRUE,fill=TRUE)
who
dim(who)
head(who)
str(who)
who <- read.table(filename,sep=",",header=TRUE,fill=TRUE,stringsAsFactors=FALSE)
str(who)
str(who)
dt <- data.frame(
id = 101:104,
age = c(25, 34, 28, 52),
gender =  factor(c("male","male","female","female")),
diabete = factor(c("Type1", "Type2", "Type1", "Type1")),
status = factor(c("Excellent","Poor", "Improved", "Poor"),
order=TRUE,
levels=c("Poor","Improved","Excellent")),
# pay attention that, "." is necessary
# row.names, cannot be "rownames", otherwise, you just create a new column called "rownames"
row.names = c("tom","dick","mary","alice")
)
write.csv(dt,"sample_data.csv")
write.csv(dt,"sample_data.csv",row.names=FALSE)
source('D:/study/Computer Science/practice/R/testr/demo_file_io.R')
demo.save()
?save
dt1 <- make.dataframe()
dt2 <- data.frame(
x = 1:4,
y =5:8)
save(dt1,dt2,file="sample_data.rdata")
load("sample_data.rdata")
dt1
dt2
?load
?parent.frame()
?load
dt2
env <- new.env()
load("sample_data.rdata",envir=env)
head(env$dt1)
head(env$dt2)
ls()
ls(env=env)
env$dt1
env$dt2
5000-22127
5000-2217
5000-2217
5000-2217
5000-2217
5000-2217
5000-2217
5000-2217
5000-2217
?strdetect
?str_detect
library("nutshell.bbdb", lib.loc="C:/Users/stasi/Documents/R/win-library/3.1")
library("nutshell.audioscrobbler", lib.loc="C:/Users/stasi/Documents/R/win-library/3.1")
detach("package:nutshell.bbdb", unload=TRUE)
detach("package:nutshell.audioscrobbler", unload=TRUE)
library("stringr", lib.loc="C:/Users/stasi/Documents/R/win-library/3.1")
txts <- c("hello stasi from R","I love tingting")
str_detect(txts,fixed("ting"))
source('D:/study/Computer Science/practice/R/testr/demo_file_io.R')
source('D:/study/Computer Science/practice/R/testr/demo_file_io.R')
source("testall.R",echo=TRUE)
source("testall.R",echo=TRUE)
xyplot(mpg~wt,mtcars,col = "red",pch = 20)
library(lattice)
xyplot(mpg~wt,mtcars,col = "red",pch = 20)
mtcars
str(mtcars)
unique(mtcars$gear)
unique(mtcars$cyl)
attach(mtcars)
gear <- factor(gear, levels = c(3, 4, 5),labels = c("3 gears", "4 gears", "5 gears"))
cyl <- factor(cyl, levels = c(4, 6, 8),labels = c("4 cylinders", 6 cylinders", "8 cylinders"))
densityplot(~mpg, main = "Density Plot", xlab = "Miles per Gallon")
densityplot(~mpg | cyl,
main = "Density Plot by Number of Cylinders",
xlab = "Miles per Gallon")
bwplot(cyl ~ mpg | gear,
main = "Box Plots by Cylinders and Gears",
xlab = "Miles per Gallon", ylab = "Cylinders")
xyplot(mpg ~ wt | cyl * gear,
main = "Scatter Plots by Cylinders and Gears",
xlab = "Car Weight", ylab = "Miles per Gallon")
cloud(mpg ~ wt * qsec | cyl,
main = "3D Scatter Plots by Cylinders")
dotplot(cyl ~ mpg | gear,
main = "Dot Plots by Number of Gears and Cylinders",
xlab = "Miles Per Gallon")
splom(mtcars[c(1, 3, 4, 5, 6)],
main = "Scatter Plot Matrix for mtcars Data")
detach(mtcars)
densityplot(~mpg, main = "Density Plot", xlab = "Miles per Gallon")
attach(mtcars)
gear <- factor(gear, levels = c(3, 4, 5),labels = c("3 gears", "4 gears", "5 gears"))
cyl <- factor(cyl, levels = c(4, 6, 8),labels = c("4 cylinders", 6 cylinders", "8 cylinders"))
attach(mtcars)
gear <- factor(gear, levels = c(3, 4, 5),labels = c("3 gears", "4 gears", "5 gears"))
cyl <- factor(cyl, levels = c(4, 6, 8),labels = c("4 cylinders", "6 cylinders", "8 cylinders"))
densityplot(~mpg, main = "Density Plot", xlab = "Miles per Gallon")
detach(mtcars)
attach(mtcars)
gear <- factor(gear, levels = c(3, 4, 5),labels = c("3 gears", "4 gears", "5 gears"))
cyl <- factor(cyl, levels = c(4, 6, 8),labels = c("4 cylinders", "6 cylinders", "8 cylinders"))
densityplot(~mpg, main = "Density Plot", xlab = "Miles per Gallon")
densityplot(~mpg | cyl,
main = "Density Plot by Number of Cylinders",
xlab = "Miles per Gallon")
bwplot(cyl ~ mpg | gear,
main = "Box Plots by Cylinders and Gears",
xlab = "Miles per Gallon", ylab = "Cylinders")
xyplot(mpg ~ wt | cyl * gear,
main = "Scatter Plots by Cylinders and Gears",
xlab = "Car Weight", ylab = "Miles per Gallon")
cloud(mpg ~ wt * qsec | cyl,
main = "3D Scatter Plots by Cylinders")
dotplot(cyl ~ mpg | gear,
main = "Dot Plots by Number of Gears and Cylinders",
xlab = "Miles Per Gallon")
splom(mtcars[c(1, 3, 4, 5, 6)],
main = "Scatter Plot Matrix for mtcars Data")
detach(mtcars)
attach(mtcars)
gear <- factor(gear, levels = c(3, 4, 5),labels = c("3 gears", "4 gears", "5 gears"))
cyl <- factor(cyl, levels = c(4, 6, 8),labels = c("4 cylinders", "6 cylinders", "8 cylinders"))
densityplot(~mpg, main = "Density Plot", xlab = "Miles per Gallon")
densityplot(~mpg | cyl, main = "Density Plot by Number of Cylinders", xlab = "Miles per Gallon")
densityplot(~mpg, main = "Density Plot", xlab = "Miles per Gallon")
densityplot(~mpg, main = "Density Plot", xlab = "Miles per Gallon")
densityplot(~mpg, main = "Density Plot", xlab = "Miles per Gallon")
densityplot(~mpg|cyl, main = "Density Plot", xlab = "Miles per Gallon")
attach(mtcars)
gear <- factor(gear, levels = c(3, 4, 5),labels = c("3 gears", "4 gears", "5 gears"))
cyl <- factor(cyl, levels = c(4, 6, 8),labels = c("4 cylinders", "6 cylinders", "8 cylinders"))
densityplot(~mpg|cyl, main = "Density Plot by Number of Cylinders", xlab = "Miles per Gallon")
cyls <- factor(cyl, levels = c(4, 6, 8),labels = c("4 cylinders", "6 cylinders", "8 cylinders"))
densityplot(~mpg|cyls, main = "Density Plot by Number of Cylinders", xlab = "Miles per Gallon")
with(mtcars,{
gear <- factor(gear, levels = c(3, 4, 5),labels = c("3 gears", "4 gears", "5 gears"))
cyls <- factor(cyl, levels = c(4, 6, 8),labels = c("4 cylinders", "6 cylinders", "8 cylinders"))
densityplot(~mpg, main = "Density Plot", xlab = "Miles per Gallon")
densityplot(~mpg|cyl, main = "Density Plot by Number of Cylinders", xlab = "Miles per Gallon")
bwplot(cyl ~ mpg | gear,
main = "Box Plots by Cylinders and Gears",
xlab = "Miles per Gallon", ylab = "Cylinders")
xyplot(mpg ~ wt | cyl * gear,
main = "Scatter Plots by Cylinders and Gears",
xlab = "Car Weight", ylab = "Miles per Gallon")
cloud(mpg ~ wt * qsec | cyl,
main = "3D Scatter Plots by Cylinders")
dotplot(cyl ~ mpg | gear,
main = "Dot Plots by Number of Gears and Cylinders",
xlab = "Miles Per Gallon")
splom(mtcars[c(1, 3, 4, 5, 6)],
main = "Scatter Plot Matrix for mtcars Data")
})
attach(mtcars)
gear <- factor(gear, levels = c(3, 4, 5),
labels = c("3 gears", "4 gears", "5 gears"))
cyl <- factor(cyl, levels = c(4, 6, 8),
labels = c("4 cylinders", "6 cylinders", "8 cylinders"))
densityplot(~mpg,
main = "Density Plot", xlab = "Miles per Gallon")
cyl
rm(list=ls())
cyl
rm(list =ls())
ls()
attach(mtcars)
gears <- factor(gear, levels = c(3, 4, 5),
labels = c("3 gears", "4 gears", "5 gears"))
cyls <- factor(cyl, levels = c(4, 6, 8),
labels = c("4 cylinders", "6 cylinders", "8 cylinders"))
gear <- factor(mtcars$gear, levels = c(3, 4, 5),
labels = c("3 gears", "4 gears", "5 gears"))
cyl <- factor(mtcars$cyl, levels = c(4, 6, 8),
labels = c("4 cylinders", "6 cylinders", "8 cylinders"))
gear <- factor(mtcars$gear, levels = c(3, 4, 5),
labels = c("3 gears", "4 gears", "5 gears"))
cyl <- factor(mtcars$cyl, levels = c(4, 6, 8),
labels = c("4 cylinders", "6 cylinders", "8 cylinders"))
densityplot(~mtcars$mpg,
main = "Density Plot", xlab = "Miles per Gallon")
densityplot(~mtcars$mpg | cyl,
main = "Density Plot by Number of Cylinders",
xlab = "Miles per Gallon")
bwplot(cyl ~ mtcars$mpg | gear,
main = "Box Plots by Cylinders and Gears",
xlab = "Miles per Gallon", ylab = "Cylinders")
xyplot(mtcars$mpg ~ mtcars$wt | cyl * gear,
main = "Scatter Plots by Cylinders and Gears",
xlab = "Car Weight", ylab = "Miles per Gallon")
cloud(mtcars$mpg ~ mtcars$wt * mtcars$qsec | cyl,
main = "3D Scatter Plots by Cylinders")
dotplot(cyl ~ mtcars$mpg | gear,
main = "Dot Plots by Number of Gears and Cylinders",
xlab = "Miles Per Gallon")
splom(mtcars[c(1, 3, 4, 5, 6)],
main = "Scatter Plot Matrix for mtcars Data")
xyplot(mtcars$mpg ~ mtcars$wt | cyl * gear,
main = "Scatter Plots by Cylinders and Gears",
xlab = "Car Weight", ylab = "Miles per Gallon")
gear <- factor(mtcars$gear, levels = c(3, 4, 5),
labels = c("3 gears", "4 gears", "5 gears"))
cyl <- factor(mtcars$cyl, levels = c(4, 6, 8),
labels = c("4 cylinders", "6 cylinders", "8 cylinders"))
densityplot(~mpg,data=mtcars,main = "Density Plot", xlab = "Miles per Gallon")
gear <- factor(mtcars$gear, levels = c(3, 4, 5),
labels = c("3 gears", "4 gears", "5 gears"))
cyl <- factor(mtcars$cyl, levels = c(4, 6, 8),
labels = c("4 cylinders", "6 cylinders", "8 cylinders"))
densityplot(~mpg,data=mtcars,main = "Density Plot", xlab = "Miles per Gallon")
densityplot(~mpg | cyl, data=mtcars,
main = "Density Plot by Number of Cylinders",
xlab = "Miles per Gallon")
bwplot(cyl ~ mpg | gear, data=mtcars,
main = "Box Plots by Cylinders and Gears",
xlab = "Miles per Gallon", ylab = "Cylinders")
xyplot(mpg ~ wt | cyl * gear, data=mtcars,
main = "Scatter Plots by Cylinders and Gears",
xlab = "Car Weight", ylab = "Miles per Gallon")
cloud(mpg ~ wt * qsec | cyl, data=mtcars,
main = "3D Scatter Plots by Cylinders")
dotplot(cyl ~ mpg | gear,data=mtcars,
main = "Dot Plots by Number of Gears and Cylinders",
xlab = "Miles Per Gallon")
splom(mtcars[c(1, 3, 4, 5, 6)],
main = "Scatter Plot Matrix for mtcars Data")
xyplot(mpg ~ wt | cyl * gear, data=mtcars,
main = "Scatter Plots by Cylinders and Gears",
xlab = "Car Weight", ylab = "Miles per Gallon")
??loess
??xyplot
library(lattice)
graph1 <- histogram(~height|voice.part, data=singer,
main="Heights of Choral Singers by Voice Part")
graph2 <- densityplot(~height, data=singer, group=voice.part,
plot.points=FALSE, auto.key=list(columns=4))
plot(graph1, split=c(1, 1, 1, 2))
plot(graph2, split=c(1, 2, 1, 2), newpage=FALSE)
?split
?plot
?lattice::plot
??plot
??plot
?plot
?lattice::plot
?lattice:::plot
??plot
?lattice::qqmath
?plot
?lattice::plot
??split
graph1 <- histogram(~height|voice.part, data=singer,
main="Heights of Choral Singers by Voice Part")
graph2 <- densityplot(~height, data=singer, group=voice.part,
plot.points=FALSE, auto.key=list(columns=4))
plot(graph1, split=c(1, 1, 1, 2))
plot(graph2, split=c(1, 2, 1, 2), newpage=FALSE)
graph1 <- histogram(~height|voice.part, data=singer,
main="Heights of Choral Singers by Voice Part")
graph2 <- densityplot(~height, data=singer, group=voice.part,
plot.points=FALSE, auto.key=list(columns=4))
plot(graph1, position=c(0, .3, 1, 1))
plot(graph2, position=c(0, 0, 1, .3), newpage=FALSE)
source("testall.R",echo=TRUE)
source("testall.R",echo=TRUE)
source("testall.R",echo=TRUE)
matrix(1:4,nrow=2)
m1 <- matrix(1:4,nrow=2)
m2 <- matrix(5:8,nrow=2)
c(m1,m2)
cbind(m1,m2)
